;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(shell-command-history set-variable-value-history custom-variable-history org-refile-history LaTeX-environment-history ess--completing-hist markdown-gfm-language-history grep-find-history gud-guiler-history tmm--history wolfram-alpha-history reftex-cite-regexp-hist calc-alg-entry-history org-table-formula-history anzu--history query-replace-history counsel-describe-symbol-history read-expression-history counsel-git-grep-history magit-read-file-hist magit-push-refspecs-history org-tags-history transient--history magit-revision-history magit-git-command-history ssh-history eww-prompt-history babel-from-history pdf-annot-color-history org-read-date-history table-cell-height-history table-cell-width-history table-rows-history table-columns-history org-link--history empty-history TeX-macro-history TeX-command-history cider-host-history cider-minibuffer-history org--links-history ido-buffer-history flycheck-read-checker-history ido-file-history cider--select-cljs-repl-history extended-command-history buffer-name-history input-method-history counsel-locate-history swiper-history tex-compile-history minibuffer-history ivy-history counsel-M-x-history file-name-history))
(setq custom-variable-history '(#("org-latex-create-formula-image-program" 0 38 (ivy-index 5))))
(setq ess--completing-hist '("*julia:~*"))
(setq markdown-gfm-language-history '(#("shell" 0 5 (ivy-index 0))))
(setq grep-find-history '("find . -type f -exec grep --color -nH --null -e $EDITOR \\{\\} +"))
(setq gud-guiler-history '("guile "))
(setq tmm--history '("h==>Help" "P==>Projectile" "p==>Prelude" "0==>Text" "O==>Org" "T==>Table" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq reftex-cite-regexp-hist '(#("burnout\\." 0 9 (idx 0 ivy-index 0)) #("5" 0 1 (idx 0 ivy-index 0)) #("3" 0 1 (idx 0 ivy-index 0)) #("1" 0 1 (idx 0 ivy-index 0))))
(setq calc-alg-entry-history '("$1+$3" "$1"))
(setq org-table-formula-history '("remote(T1-h0, @2$2" "(remote(T1, @2$2) - remote(T1-h0, @2$2))"))
(setq query-replace-history '("3" "2" "2" "3" "\"" "'" "bollinger3" "bollinger2" "bollinger3" "bollinger1" "bollinger2" "bollinger1" "last" "first" "order" "customers" "" "..." "" "\"...\"" "" "..." "" ">>>" "data" "blood_pressure" "Parch" "SibSp" "4" "3" "red" "yellow" "green" "red" "green" "yellow" "yellow" "red" "normalsize" "large" "large" "Large" "virginica" "verginica" "a" "ã" "ein-python" "ein_python" "ein_python" "ein-python" "ein-python" "ein_python" "ein_python" "ein-python" "#+" "#+++" "#+" "#+++ " "#+" "#++" "#++" "#+" "#+begin_src" "#+BEGIN_SRC" "#+begin_src" "#+BEGIN_SRC" "15" "45" "15" "33"))
(setq counsel-describe-symbol-history '(#("^org-inlin" 0 10 (ivy-index 0)) "org-inline-image-overlays" #("org-latex-defa" 0 14 (ivy-index 4)) "org-latex-default-table-mode" #("org-forma" 0 9 (ivy-index 2)) "org-format-latex-options" #("^A" 0 2 (ivy-index 1)) "AUCTeX-version"))
(setq read-expression-history '("(require 'ob-clojure)"))
(setq magit-revision-history '(#("1" 0 1 (ivy-index 0)) #("main" 0 4 (ivy-index 0)) #("upload CV" 0 9 (ivy-index 0)) #("master" 0 6 (ivy-index 0)) #("Junior-Website" 0 14 (ivy-index 0)) #("Junior-Website/master" 0 21 (ivy-index 1)) #("origin/Branquinho" 0 17 (ivy-index 0)) #("origin/master" 0 13 (ivy-index 1)) #("Branquinho" 0 10 (ivy-index 0)) #("DataTransfer" 0 12 (ivy-index 0)) #("origin/main" 0 11 (ivy-index 1)) #("HEAD" 0 4 (ivy-index 1)) #("copia do repositorio" 0 20 (ivy-index 0)) #("OneBranch" 0 9 (ivy-index 0)) #("heads/ORIG_HEAD" 0 15 (ivy-index 0)) #("ORIG_HEAD" 0 9 (ivy-index 0)) #("c7d3108" 0 7 (ivy-index 0)) #("MyBranch" 0 8 (ivy-index 0)) #("4a441f4c64409a3b3bf050a9052b7110a9b6f850" 0 40 (ivy-index 0)) #("Week3-annotations" 0 17 (ivy-index 0)) #("6d2a009aa20cda7219ced2831373074357417620" 0 40 (ivy-index 0)) #("week3-merge-conflit" 0 19 (ivy-index 2)) #("origin/Week3-annotations" 0 24 (ivy-index 0)) #("Week3-merge-conflit" 0 19 (ivy-index 0)) #("origin/gh-pages" 0 15 (ivy-index 0)) #("test-branch" 0 11 (ivy-index 0)) #("disk_usage.py" 0 13 (ivy-index 0))))
(setq magit-git-command-history '("git "))
(setq ssh-history '("student-04-ee9d9c1021ba@104.154.42.178" "104.154.42.178" "student-00-52a640ecf4ca" "ftp.buddhilw.com"))
(setq eww-prompt-history '("youtube.com" "https://www.youtube.com/?search_query=master+of+none?search_query=?search_query=" "youtube.com" "basic.html"))
(setq babel-from-history '("English"))
(setq table-cell-height-history '("1"))
(setq table-cell-width-history '("5"))
(setq table-rows-history '("5" "3"))
(setq table-columns-history '("6" "3"))
(setq TeX-command-history '(#("LaTeX" 0 5 (idx 0 ivy-index 0)) #("BibTeX" 0 6 (idx 1 ivy-index 1)) #("View" 0 4 (idx 3 ivy-index 3)) #("Clean" 0 5 (idx 17 ivy-index 17)) #("Clean All" 0 9 (idx 18 ivy-index 18)) #("Index" 0 5 (ivy-index 11 idx 11)) #("Biber" 0 5 (idx 2 ivy-index 2)) #("Dvips" 0 5 (ivy-index 7 idx 7))))
(setq cider-host-history '(#("localhost" 0 9 (ivy-index 0 idx 0))))
(setq cider-minibuffer-history '("js/compiled/out" "browser" "connect" "^" "max-dist" "grad/cosine-schemes" "cosine-gradient" "col/random-rgb" "m/random" "col/random-rgb" "col/hsva"))
(setq ido-buffer-history '("base.html"))
(setq cider--select-cljs-repl-history '(#("figwheel-connected" 0 18 (ivy-index 2)) #("figwheel" 0 8 (ivy-index 0)) #("browser" 0 7 (ivy-index 3))))
(setq extended-command-history '("babel" "lsp-install-server" "lsp-mode" "scala-mode" "prelude-update"))
(setq buffer-name-history '(#("test.org" 0 8 (ivy-index 0)) #("*Call-Tree*" 0 11 (ivy-index 2)) #("*julia:main*" 0 12 (ivy-index 0)) #("*julia:~*" 0 9 (ivy-index 0)) #("*julia*" 0 7 (ivy-index 0)) #("*R:PP*" 0 6 (ivy-index 0)) "base.html" "*Messages*"))
(setq counsel-locate-history '(#("ema" 0 3 (ivy-index 0)) #("dir" 0 3 (ivy-index 0))))
(setq swiper-history '(#("trello" 0 6 (ivy-index 0)) #("   org-trello         20200508.1705 installed             Minor mode to synchronize org-mode buffer and trello board" 0 1 (display "4933 " swiper-line-number 4933) 1 3 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil)) 3 13 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 13 14 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Package") 14 22 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Package" display (space :align-to 21)) 22 35 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20200508.1705" 9 22 (font-lock-face package-status-installed)) font-lock-face package-status-installed) 35 36 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Version") 36 45 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Status" help-echo #("Status: installed" 8 17 (font-lock-face package-status-installed)) font-lock-face package-status-installed) 45 46 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Status") 46 47 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Status" display (space :align-to 46)) 47 48 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Archive") 48 58 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Archive" display (space :align-to 57)) 58 116 (tabulated-list-entry [("org-trello" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) action package-menu-describe-package) #("20200508.1705" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Minor mode to synchronize org-mode buffer and trello board" 0 58 (font-lock-face package-description))] tabulated-list-id #s(package-desc org-trello (20200508 1705) "Minor mode to synchronize org-mode buffer and trello board" ((request-deferred (0 2 0)) (deferred (0 4 0)) (s (1 11 0)) (dash-functional (2 12 1)) (dash (2 12 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-trello-20200508.1705" ((:url . "https://github.com/org-trello/org-trello") (:keywords "org-mode" "trello" "sync" "org-trello") (:maintainer "Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com") (:authors ("Antoine R. Dumont (@ardumont)" . "antoine.romain.dumont@gmail.com")) (:commit . "56c519a00c6e3c8f6923cd0460342089d58c41c9")) nil) tabulated-list-column-name "Description" help-echo #("Description: Minor mode to synchronize org-mode buffer and trello board" 13 71 (font-lock-face package-description)) font-lock-face package-description)) #("outloo" 0 6 (ivy-index 1)) #("   org-outlook        20160705.1338 installed             Outlook org" 0 1 (swiper-line-number 4869 display "4869 ") 1 3 (tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 3 14 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 14 15 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 15 22 (display (space :align-to 21) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 22 35 (font-lock-face package-status-installed help-echo #("Version: 20160705.1338" 9 22 (font-lock-face package-status-installed)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 35 36 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 36 45 (font-lock-face package-status-installed help-echo #("Status: installed" 8 17 (font-lock-face package-status-installed)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 45 46 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 46 47 (display (space :align-to 46) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 47 48 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 48 58 (display (space :align-to 57) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))]) 58 69 (font-lock-face package-description help-echo #("Description: Outlook org" 13 24 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) tabulated-list-entry [("org-outlook" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-outlook (20160705 1338) "Outlook org" nil nil nil "/home/buddhilw/.emacs.d/elpa/org-outlook-20160705.1338" ((:url . "https://github.com/mlf176f2/org-outlook.el") (:keywords "org-outlook") (:maintainer "Matthew L. Fidler") (:authors ("Matthew L. Fidler")) (:commit . "ec32d8d9d8ffd17e6de4de0b52fc3f5ad9b4cc0d")) nil) action package-menu-describe-package) #("20160705.1338" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Outlook org" 0 11 (font-lock-face package-description))])) #("orgmode" 0 7 (ivy-index 0)) #("   org-gnome          20150614.1457 installed             Orgmode integration with the GNOME desktop" 0 1 (swiper-line-number 4838 display "4838 ") 1 3 (tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 3 12 (button (t) category default-button face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package tabulated-list-column-name "Package" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 12 13 (tabulated-list-column-name "Package" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 13 22 (display (space :align-to 21) tabulated-list-column-name "Package" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 22 35 (font-lock-face package-status-installed help-echo #("Version: 20150614.1457" 9 22 (font-lock-face package-status-installed)) tabulated-list-column-name "Version" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 35 36 (tabulated-list-column-name "Version" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 36 45 (font-lock-face package-status-installed help-echo #("Status: installed" 8 17 (font-lock-face package-status-installed)) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 45 46 (tabulated-list-column-name "Status" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 46 47 (display (space :align-to 46) tabulated-list-column-name "Status" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 47 48 (tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 48 58 (display (space :align-to 57) tabulated-list-column-name "Archive" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))]) 58 100 (font-lock-face package-description help-echo #("Description: Orgmode integration with the GNOME desktop" 13 55 (font-lock-face package-description)) tabulated-list-column-name "Description" tabulated-list-id #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) tabulated-list-entry [("org-gnome" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc org-gnome (20150614 1457) "Orgmode integration with the GNOME desktop" ((alert (1 2)) (telepathy (0 1)) (gnome-calendar (0 1))) nil nil "/home/buddhilw/.emacs.d/elpa/org-gnome-20150614.1457" ((:keywords "org" "gnome") (:maintainer "Nicolas Petton" . "petton.nicolas@gmail.com") (:authors ("Nicolas Petton" . "petton.nicolas@gmail.com")) (:commit . "122e14cf6f8104150a65246a9a7c10e1d7939862")) nil) action package-menu-describe-package) #("20150614.1457" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Orgmode integration with the GNOME desktop" 0 42 (font-lock-face package-description))])) "org-" "cz" #("pt" 0 2 (ivy-index 1)) #(" pt_BR.UTF-8 UTF-8  " 0 1 (display "392 " swiper-line-number 392)) "bgloc" #("xreso" 0 5 (ivy-index 0)) #("   xresources-theme   20190108.1851 available  melpa      Use your .Xresources as your emacs theme" 0 1 (display "4555 " swiper-line-number 4555) 1 3 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil)) 3 19 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 19 20 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Package") 20 22 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Package" display (space :align-to 21)) 22 35 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20190108.1851" 9 22 (font-lock-face package-status-available)) font-lock-face package-status-available) 35 36 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Version") 36 45 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Status" help-echo #("Status: available" 8 17 (font-lock-face package-status-available)) font-lock-face package-status-available) 45 46 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Status") 46 47 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Status" display (space :align-to 46)) 47 52 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Archive" help-echo #("Archive: melpa" 9 14 (font-lock-face package-status-available)) font-lock-face package-status-available) 52 53 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Archive") 53 58 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Archive" display (space :align-to 57)) 58 98 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-available)) #("available" 0 9 (font-lock-face package-status-available)) #("melpa" 0 5 (font-lock-face package-status-available)) #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil single "melpa" nil ((:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:keywords "xresources" "theme")) nil) tabulated-list-column-name "Description" help-echo #("Description: Use your .Xresources as your emacs theme" 13 53 (font-lock-face package-description)) font-lock-face package-description)) #("xresou" 0 6 (ivy-index 0)) #("   xresources-theme   20190108.1851 installed             Use your .Xresources as your emacs theme" 0 1 (display "4978 " swiper-line-number 4978) 1 3 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil)) 3 19 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Package" action package-menu-describe-package package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) follow-link t font-lock-face package-name face package-name category default-button button (t)) 19 20 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Package") 20 22 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Package" display (space :align-to 21)) 22 35 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Version" help-echo #("Version: 20190108.1851" 9 22 (font-lock-face package-status-installed)) font-lock-face package-status-installed) 35 36 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Version") 36 45 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Status" help-echo #("Status: installed" 8 17 (font-lock-face package-status-installed)) font-lock-face package-status-installed) 45 46 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Status") 46 47 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Status" display (space :align-to 46)) 47 48 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Archive") 48 58 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Archive" display (space :align-to 57)) 58 98 (tabulated-list-entry [("xresources-theme" face package-name font-lock-face package-name follow-link t package-desc #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) action package-menu-describe-package) #("20190108.1851" 0 13 (font-lock-face package-status-installed)) #("installed" 0 9 (font-lock-face package-status-installed)) "" #("Use your .Xresources as your emacs theme" 0 40 (font-lock-face package-description))] tabulated-list-id #s(package-desc xresources-theme (20190108 1851) "Use your .Xresources as your emacs theme" nil nil nil "/home/buddhilw/.emacs.d/elpa/xresources-theme-20190108.1851" ((:maintainer "Marten Lienen" . "marten.lienen@gmail.com") (:authors ("Marten Lienen" . "marten.lienen@gmail.com")) (:keywords "xresources" "theme") (:commit . "5239acb51aa2dfa89a207e57012108d8fcf60562")) nil) tabulated-list-column-name "Description" help-echo #("Description: Use your .Xresources as your emacs theme" 13 53 (font-lock-face package-description)) font-lock-face package-description)) #("W1" 0 2 (ivy-index 0)) #(" \\profilepic{W1-2} % Profile picture" 0 1 (display "114 " swiper-line-number 114) 1 12 (face (font-latex-sedate-face) fontified t) 12 19 (fontified t) 19 36 (face font-lock-comment-face fontified t)) "W2" "image" #("org images" 0 10 (ivy-index 4)) #(" Show Value Org Startup With Inline Images " 0 1 (display "2161 " swiper-line-number 2161) 1 11 (keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)) rear-nonsticky t display (image :type xpm :file "/usr/share/emacs/27.1/etc/images/custom/right.xpm" :ascent center))) #(" Show Value Org Display Remote Inline Images " 0 1 (display "646  " swiper-line-number 646) 1 11 (keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)) rear-nonsticky t display (image :type xpm :file "/usr/share/emacs/27.1/etc/images/custom/right.xpm" :ascent center))) #("odt" 0 3 (ivy-index 0)) #(" Show Value Org Odt Content Template File " 0 1 (display "1626 " swiper-line-number 1626) 1 11 (keymap (keymap (111 . image-save) (114 . image-rotate) (C-mouse-4 . image-mouse-increase-size) (C-wheel-up . image-mouse-increase-size) (C-mouse-5 . image-mouse-decrease-size) (C-wheel-down . image-mouse-decrease-size) (43 . image-increase-size) (45 . image-decrease-size)) rear-nonsticky t display (image :type xpm :file "/usr/share/emacs/27.1/etc/images/custom/right.xpm" :ascent center))) "são p" #("São" 0 3 (ivy-index 0)) #("   \\twentyitem{2016 - 2021}{Graduation}{\\normalsize{São Paulo University, USP}}{Engineering Physics}" 0 1 (swiper-line-number 185 display "185 ") 3 14 (face (font-latex-sedate-face)) 40 47 (face (font-lock-keyword-face font-latex-sedate-face)) 47 51 (face (font-lock-keyword-face font-latex-sedate-face)) 51 76 (face (font-lock-type-face)) 76 77 (face (font-lock-type-face)) 77 78 (face (font-lock-type-face)) 81 83 (face (whitespace-line)) 83 99 (face (whitespace-line)) 99 100 (face (whitespace-line))) "sao" #("lorena" 0 6 (ivy-index 0)) #(" \\cvaddress{Lorena, SP} % Short address/location, use \\newline if more than 1 line is required" 0 1 (swiper-line-number 119 display "119 ") 1 11 (fontified t face (font-latex-sedate-face)) 11 24 (fontified t) 24 54 (fontified t face font-lock-comment-face) 54 62 (fontified t face (font-lock-comment-face font-latex-sedate-face)) 62 81 (fontified t face font-lock-comment-face) 81 94 (fontified t face (whitespace-line font-lock-comment-face))) #("scalene" 0 7 (ivy-index 0)) #("     Berger apresenta como utilizar Scalene para otimização.}" 0 1 (swiper-line-number 232 display "232 ") 1 61 (fontified t)) #("usp" 0 3 (ivy-index 1)) #("   \\twentyitem{2016 - 2021}{Graduation}{\\normalsize{São Paulo University, USP}}{}" 0 1 (swiper-line-number 185 display "185 ") 1 3 (fontified t) 3 14 (fontified t face (font-latex-sedate-face)) 14 40 (fontified t) 40 47 (fontified t face (font-lock-keyword-face font-latex-sedate-face)) 47 51 (fontified t face (font-lock-keyword-face font-latex-sedate-face)) 51 76 (fontified t face (font-lock-type-face)) 76 77 (fontified t face (font-lock-type-face)) 77 78 (fontified t face (font-lock-type-face)) 78 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t)) #(" \\cvmail{pedro.branquinho@usp.br} % Email address" 0 1 (swiper-line-number 122 display "122 ") 1 8 (fontified t face (font-latex-sedate-face)) 8 9 (fontified t) 9 14 (fontified t) 14 15 (fontified t) 15 30 (fontified t) 30 32 (fontified t) 32 34 (fontified t) 34 49 (fontified t face font-lock-comment-face)) #("engi" 0 4 (ivy-index 0)) #(" \\cvjobtitle{Engineering Physicist} % Job title/career" 0 1 (swiper-line-number 116 display "116 ") 1 12 (face (font-latex-sedate-face)) 36 54 (face font-lock-comment-face)) #("inte" 0 4 (ivy-index 2)) #(" \\section{Interesses Profissionais}" 0 1 (swiper-line-number 163 display "163 ") 1 9 (fontified t face (font-lock-keyword-face font-latex-sedate-face)) 9 10 (fontified t) 10 17 (fontified t face (font-latex-sectioning-2-face)) 17 34 (fontified t face (font-latex-sectioning-2-face)) 34 35 (fontified t)) #("escala" 0 6 (ivy-index 0)) #(" 		[Escala, 0 (já utilizei) até 6 (Expert).]" 0 1 (swiper-line-number 170 display "170 ") 1 3 (fontified t font-lock-multiline t face whitespace-tab) 3 44 (fontified t font-lock-multiline t face (font-lock-function-name-face))) #("elm" 0 3 (ivy-index 0)) #("     ClojureScript/3.0}, {R/3}, {Git/3}, {Docker/1.5}, {Elm/1}}" 0 1 (swiper-line-number 148 display "148 ") 1 49 (fontified t) 49 63 (fontified t)) #("     ClojureScript/3.0}, {R/3}, {Git/3}, {Docker/1.5}, {Elm/1}}" 0 1 (swiper-line-number 148 display "148 ") 1 49 (fontified t) 49 63 (fontified t)) #("habi" 0 4 (ivy-index 0)) #(" 		\\profilesection{Habilidades}" 0 1 (swiper-line-number 165 display "165 ") 1 3 (fontified t font-lock-multiline t face whitespace-tab) 3 18 (fontified t font-lock-multiline t face (font-lock-function-name-face font-latex-sedate-face)) 18 31 (fontified t font-lock-multiline t face (font-lock-function-name-face))) "habili" #("inden" 0 5 (ivy-index 0)) #(" \\aboutme{Indentifico-me com as área de pro-" 0 1 (swiper-line-number 132 display "132 ") 1 9 (face (font-latex-sedate-face))) #("about" 0 5 (ivy-index 1)) #(" 		\\ifthenelse{\\equal{\\aboutme}{}}{}{" 0 1 (swiper-line-number 156 display "156 ") 1 3 (fontified t font-lock-multiline t face whitespace-tab) 3 14 (fontified t font-lock-multiline t face (font-lock-function-name-face font-latex-sedate-face)) 14 15 (fontified t font-lock-multiline t face (font-lock-function-name-face)) 15 21 (fontified t font-lock-multiline t face (font-lock-function-name-face font-latex-sedate-face)) 21 22 (fontified t font-lock-multiline t face (font-lock-function-name-face)) 22 30 (fontified t font-lock-multiline t face (font-lock-function-name-face font-latex-sedate-face)) 30 37 (fontified t font-lock-multiline t face (font-lock-function-name-face))) #("twenty" 0 6 (ivy-index 1)) #(" \\documentclass[letterpaper]{twentysecondcv} % a4paper for A4" 0 1 (swiper-line-number 22 display "22  ") 1 15 (fontified t face (font-lock-keyword-face font-latex-sedate-face)) 15 16 (fontified t) 16 27 (fontified t face (font-lock-variable-name-face)) 27 29 (fontified t) 29 43 (fontified t face (font-lock-function-name-face)) 43 45 (fontified t) 45 61 (fontified t face font-lock-comment-face)) #("tw" 0 2 (ivy-index 0)) #(" \\ProvidesClass{twentysecondcv}[2017/01/08 CV class]" 0 1 (swiper-line-number 1 display "1   ") 1 15 (fontified t face (font-latex-sedate-face)) 15 52 (fontified t)) #("indenti" 0 7 (ivy-index 0)) #(" \\aboutme{Indentifico-me com as área de pro-" 0 1 (swiper-line-number 132 display "132 ") 1 9 (fontified t face (font-latex-sedate-face)) 9 44 (fontified t)) "sobre" "sectio" "sobre mim" #("Sobre" 0 5 (ivy-index 0)) #("     Minicurso Sobre \\LaTeX{}} - Aulas disponíveis no YouTube.}" 0 1 (swiper-line-number 202 display "202 ") 21 27 (face (font-lock-keyword-face font-latex-sedate-face))) #("cvmail" 0 6 (ivy-index 0)) #(" \\cvmail{pedro.branquinho@usp.br} % Email address" 0 1 (swiper-line-number 122 display "122 ") 1 8 (fontified t face (font-latex-sedate-face)) 8 9 (fontified t) 9 14 (fontified t) 14 15 (fontified t) 15 30 (fontified t) 30 32 (fontified t) 32 34 (fontified t) 34 49 (fontified t face font-lock-comment-face)) #("15" 0 2 (ivy-index 0)) #(" \\cvnumberphone{(16) 99340-1215} % Phone number" 0 1 (swiper-line-number 120 display "120 ") 1 15 (fontified t face (font-latex-sedate-face)) 15 27 (fontified t) 27 33 (fontified t) 33 47 (fontified t face font-lock-comment-face)) #("enge" 0 4 (ivy-index 0)) #(" \\cvjobtitle{Engenheiro Físico} % Job title/career" 0 1 (swiper-line-number 116 display "116 ") 1 12 (fontified t face (font-latex-sedate-face)) 12 32 (fontified t) 32 50 (fontified t face font-lock-comment-face)) "cn" #("cn" 0 2 (ivy-index 1)) #(" #ug_CN UTF-8  " 0 1 (display "473 " swiper-line-number 473)) #("dr" 0 2 (ivy-index 0)) #("     \"dry_run\": true," 0 1 (swiper-line-number 8 display "8   ") 1 5 (fontified t) 5 14 (fontified t face font-lock-keyword-face) 14 16 (fontified t) 16 20 (fontified t face font-lock-constant-face) 20 21 (fontified t)) #("ltc" 0 3 (ivy-index 0)) #("             \"LTC/BTC\"," 0 1 (swiper-line-number 73 display "73  ") 1 13 (fontified t) 13 22 (fontified t face font-lock-string-face) 22 23 (fontified t)) #("tele" 0 4 (ivy-index 0)) #("     \"telegram\": {" 0 1 (swiper-line-number 143 display "143 ") 1 5 (fontified t) 5 15 (fontified t face font-lock-keyword-face) 15 18 (fontified t)) #("roi" 0 3 (ivy-index 3)) #("     minimal_roi = {" 0 1 (swiper-line-number 38 display "38  ") 1 5 (fontified t) 5 16 (fontified t face font-lock-variable-name-face) 16 20 (fontified t)) #("     ignore_roi_if_buy_signal = False" 0 1 (swiper-line-number 64 display "64  ") 1 5 (fontified t) 5 29 (fontified t face font-lock-variable-name-face) 29 32 (fontified t) 32 37 (fontified t face font-lock-constant-face)) "xmr" #("xmr" 0 3 (ivy-index 1)) #("             \"XMR/BTC\"," 0 1 (swiper-line-number 83 display "83  ") 1 13 (fontified t) 13 22 (fontified t face font-lock-string-face) 22 23 (fontified t)) #("     \"telegram\": {" 0 1 (display "129 " swiper-line-number 129) 1 5 (fontified t) 5 15 (face font-lock-keyword-face fontified t) 15 18 (fontified t)) #("trail" 0 5 (ivy-index 1)) #("     trailing_stop = True" 0 1 (display "50  " swiper-line-number 50) 1 5 (fontified t) 5 18 (face font-lock-variable-name-face fontified t) 18 21 (fontified t) 21 25 (face font-lock-constant-face fontified t)) #("stop" 0 4 (ivy-index 3)) #("     stoploss = -0.42778" 0 1 (display "47  " swiper-line-number 47) 1 5 (fontified t) 5 13 (face font-lock-variable-name-face fontified t) 13 24 (fontified t)) #("         'stoploss_on_exchange': False" 0 1 (display "74  " swiper-line-number 74) 1 9 (fontified t) 9 31 (face font-lock-string-face fontified t) 31 33 (fontified t) 33 38 (face font-lock-constant-face fontified t)) "bb_lo" #("eg" 0 2 (ivy-index 2)) #("             \"EGLD/BTC\"," 0 1 (display "89  " swiper-line-number 89) 1 13 (fontified t) 13 23 (face font-lock-string-face fontified t) 23 24 (fontified t)) #("mk" 0 2 (ivy-index 0)) #("             \"MKR/BTC\"," 0 1 (display "88  " swiper-line-number 88) 1 13 (fontified t) 13 22 (face font-lock-string-face fontified t) 22 23 (fontified t)) #("sn" 0 2 (ivy-index 0)) #("             \"SNX/BTC\"," 0 1 (display "87  " swiper-line-number 87) 1 13 (fontified t) 13 22 (face font-lock-string-face fontified t) 22 23 (fontified t)) #("ftt" 0 3 (ivy-index 0)) #("             \"FTT/BTC\"," 0 1 (display "84  " swiper-line-number 84) 1 13 (fontified t) 13 22 (face font-lock-string-face fontified t) 22 23 (fontified t)) #("wb" 0 2 (ivy-index 0)) #("             \"WBTC/BTC\"," 0 1 (display "80  " swiper-line-number 80) 1 13 (fontified t) 13 23 (face font-lock-string-face fontified t) 23 24 (fontified t)) #("uni" 0 3 (ivy-index 0))))
(setq tex-compile-history '(#("xetex \\\\nonstopmode\\\\input revisao2.tex" 0 39 (ivy-index 1 idx 1)) #("\\doc-view \"RelatParcial.pdf\"" 0 28 (ivy-index 5 idx 5)) #("pdflatex \\\\nonstopmode\\\\input RelatParcial.tex" 0 46 (ivy-index 0 idx 0)) #("bibtex --min-crossref=100 RelatParcial" 0 38 (ivy-index 11 idx 11)) #("\\doc-view \"Prova.pdf\"" 0 21 (ivy-index 5 idx 5)) #("pdflatex \\\\nonstopmode\\\\input Prova.tex" 0 39 (ivy-index 0 idx 0)) #("\\doc-view \"Chap7.pdf\"" 0 21 (ivy-index 5 idx 5)) #("\\doc-view \"RESOLUCAO.pdf\"" 0 25 (ivy-index 5 idx 5)) #("pdflatex \\\\nonstopmode\\\\input RESOLUCAO.tex" 0 43 (ivy-index 0 idx 0)) #("\\doc-view \"Lista1.pdf\"" 0 22 (ivy-index 5 idx 5)) #("pdflatex \\\\nonstopmode\\\\input Lista1.tex" 0 40 (ivy-index 0 idx 0)) #("pdflatex \\\\nonstopmode\\\\input livro.tex" 0 39 (ivy-index 0 idx 0)) #("\\doc-view \"livro.pdf\"" 0 21 (ivy-index 5 idx 5)) #("\\doc-view \"structure.pdf\"" 0 25 (ivy-index 5 idx 5)) #("pdftex \\\\nonstopmode\\\\input structure.tex" 0 41 (ivy-index 0 idx 0)) #("\\doc-view \"Aula1.pdf\"" 0 21 (idx 5 ivy-index 5)) #("pdflatex \\\\nonstopmode\\\\input Aula1.tex" 0 39 (idx 0 ivy-index 0)) #("pdflatex \\\\nonstopmode\\\\input plano.tex" 0 39 (idx 0 ivy-index 0)) #("\\doc-view \"plano.pdf\"" 0 21 (idx 5 ivy-index 5))))
(setq minibuffer-history '("a" "evince Roteiro.pdf" "a" "evince Roteiro.pdf" "a" "evince template.pdf" "a" "~/./Images/Binance-demo/acc.png" "a" "100" "~/API.png" "img1.png" "a" "evince template.pdf" "evince template_english.pdf" "a" "755" "a" "BuddhiLW" "a" "/bin/zsh" "a" "/bin/zsh" "a" "evince RB.pdf" "a" "somar(2,3);" "somar(1,2)" "a" "./1.png" "Caption" "Nome" "./1.png" "Navi Avatar" "https://www.cinema52.com/2014/wp-content/uploads/2014/09/TreeOfVoices-1024x571.png" "a" "95" "a" "95" "a" "95" "a" "evince revisao2.pdf" "a" "/bin/zsh" "a" "100" "a" "https://www.amazon.fr/Corcunda-Notre-Dame-Victor-Hugo-ebook/dp/B077HXFPHD" "a" "evince template.pdf" "evince .pdf" "a" "~/org1.png" "90" "0" "80" "100" "a" "Calorie restriction" "https://www.nia.nih.gov/health/calorie-restriction-and-fasting-diets-what-do-we-know#animal" "https://www.nia.nih.gov/.../calorie-restriction-and" "a" "/bin/zsh" "Hello" "a" "Single" "Emacs-Tree-View" "https://mads-hartmann.com/2016/05/12/emacs-tree-view.html" "Hugo" "a" "A link to a cool blog" "a" "80" "100" "evince carta-nubank.pdf" "evince template.pdf" "a" "BuddhiLW" "a" "BuddhiLW" "https://github.com/BuddhiLW/Junior-Website.git" "Junior-Website" "https://github.com/BuddhiLW/Junior-Website.git" "Junior-Website" "a" "evince Natal.pdf" "a" "evince natal2.pdf" "evince .pdf" "a" "evince .pdf" "a" "evince Natal.pdf" "evince Lista1.pdf" "evince Natal.pdf" "a" "sml" "a" "sml"))
(setq ivy-history '(#("Roteiro.tex" 0 11 (ivy-index 1)) #("bib.bib" 0 7 (ivy-index 1)) #("pt_BR" 0 5 (idx 28 ivy-index 0)) #("00-keyborad.conf" 0 16 (ivy-index 1)) #("Keyboard.org" 0 12 (ivy-index 1)) #("*scratch*" 0 9 (ivy-index 4)) #("xprofile" 0 8 (ivy-index 1)) #("*Custom Themes*" 0 15 (ivy-index 1)) #("magit-process: cv-git" 0 21 (ivy-index 1)) #("origin" 0 6 (ivy-index 3)) #("Roteiro.org" 0 11 (ivy-index 2)) #("*Customize Apropos*" 0 19 (ivy-index 1)) #("ATT" 0 3 (ivy-index 0)) "ATTR_SRC: " #("OP" 0 2 (ivy-index 0)) "OPTIONS: " #("ATTR" 0 4 (ivy-index 3)) "ATTR_EXPORT: " #("*Customize Group: Emacs*" 0 24 (ivy-index 2)) #("in" 0 2 (ivy-index 1)) "inlineimages" #("template_english.tex" 0 20 (ivy-index 1)) #("twentysecondcvenglish.cls" 0 25 (ivy-index 1)) #("en" 0 2 (idx 60 ivy-index 33)) #("twentysecondcv.cls" 0 18 (ivy-index 1)) #("install.org" 0 11 (ivy-index 3 face ivy-virtual)) #("aula14.org" 0 10 (ivy-index 1)) #("Aula13.org" 0 10 (ivy-index 1)) #("https://github.com/BuddhiLW/FreqTrade-backtesting.git" 0 53 (ivy-index 0)) #("magit: freqtrade-doker-backtesting" 0 34 (ivy-index 1)) #("https://github.com/BuddhiLW/FreqTrade-backtesting" 0 49 (ivy-index 0)) #("docker-compose.yml" 0 18 (ivy-index 1)) #("config" 0 6 (ivy-index 3)) "freqtrade-doker2/config.json" #("freqtrade-doker-backtesting/config.json" 0 39 (ivy-index 1)) #("freqtrade-doker-backtesting/strategy-06-bb-rsi.py" 0 49 (ivy-index 3)) #("co" 0 2 (ivy-index 1)) #("freqtrade-doker3/config.json" 0 28 (ivy-index 1)) #("freqtrade-doker3/strategy-06-bb-rsi.py" 0 38 (ivy-index 5)) #("con" 0 3 (ivy-index 3)) #("strategy-06-bb-rsi.py" 0 21 (ivy-index 1)) #("str" 0 3 (ivy-index 1)) "strategy-01-bb-rsi.py" #("FreqTrader.org" 0 14 (face ivy-virtual ivy-index 7)) #("freqtrade-docker/config.json" 0 28 (ivy-index 1)) #("d" 0 1 (ivy-index 2)) #("strategy-03-bb-rsi.py" 0 21 (ivy-index 1)) #("strategy-04-bb-rsi.py" 0 21 (ivy-index 1)) #("fre" 0 3 (ivy-index 2)) #("freq" 0 4 (ivy-index 0)) #("config.json" 0 11 (ivy-index 3 face ivy-virtual)) #("freqtrade-docker/user_data/config.json" 0 38 (ivy-index 1)) #("org" 0 3 (ivy-index 0)) #("freqtrade-docker/strategy-03-bb-rsi.py" 0 38 (ivy-index 3)) #("freqtrade-doker-backtesting/strategy-03-bb-rsi.py" 0 49 (ivy-index 2)) #("bb" 0 2 (ivy-index 1)) "adx-bb-rsi2.py" #("SmoothScalp.py" 0 14 (ivy-index 1)) #("adx-bb-rsi2.py" 0 14 (ivy-index 1)) #("CCIStrategy.py" 0 14 (ivy-index 1)) #("sample_strategy.py" 0 18 (ivy-index 1)) #("adx-bb-rsi1.py" 0 14 (ivy-index 1)) #("adxmomentum-bb-rsi.py" 0 21 (ivy-index 2)) #("BbandRsi.py" 0 11 (ivy-index 1)) #("bb rsi" 0 6 (ivy-index 7)) "freqtrade-doker-backtesting/strategy-01-bb-rsi.py" #("freqtrade/config.json" 0 21 (ivy-index 17)) #("sample_hyperopt_advanced.py" 0 27 (ivy-index 1)) #("freqtrade-docker/bbrsi_opt.py" 0 29 (ivy-index 1)) #("freqtrade-doker-backtesting/user_data/config.json" 0 49 (ivy-index 1)) #("freqtrade-docker/strategy-02-bb-rsi.py" 0 38 (ivy-index 1)) #("freqtrade-doker-backtesting/strategy-02-bb-rsi.py" 0 49 (ivy-index 1)) #("strategies" 0 10 (ivy-index 1)) #("freqtrade-doker-backtesting/LINK_BTC-1h.json" 0 44 (ivy-index 2)) #("freqtrade-docker/LTC_BTC-1h.json" 0 32 (ivy-index 2)) #("confi" 0 5 (ivy-index 0)) #("strategy-02-bb-rsi.py" 0 21 (ivy-index 1)) #("freqtrade-docker/strategy-01-bb-rsi.py" 0 38 (ivy-index 1)) #("bbrsi_opt.py" 0 12 (ivy-index 1)) #("Strategies.org" 0 14 (ivy-index 5)) #("strategy-01-bb-rsi.py" 0 21 (ivy-index 1)) #("or" 0 2 (ivy-index 2)) #("Wallet.org" 0 10 (ivy-index 1)) #("sample_hyperopt.py" 0 18 (ivy-index 1)) #("sample_hyperopt_loss.py" 0 23 (ivy-index 1)) #("/sudo:root@localhost:/config.json" 0 33 (ivy-index 2)) #("xorg.conf" 0 9 (ivy-index 1)) #("Quadency.org" 0 12 (face ivy-virtual ivy-index 4)) #("ft" 0 2 (ivy-index 2)) #(".xinitrc" 0 8 (ivy-index 2)) #("setbg" 0 5 (ivy-index 2)) #("xr" 0 2 (ivy-index 1)) "xresources" #("Xresources" 0 10 (ivy-index 7 face ivy-virtual)) #("xinitrc" 0 7 (ivy-index 6 face ivy-virtual)) #("13-02-2021.txt" 0 14 (face ivy-virtual ivy-index 3)) #("colors.sh" 0 9 (ivy-index 1)) #("xresources" 0 10 (ivy-index 1)) #(".xprofile" 0 9 (ivy-index 1))))
(setq counsel-M-x-history '(#("elisp" 0 5 (ivy-index 0)) "company-elisp" #("org-trello" 0 10 (ivy-index 6)) "org-trello/assign-me" #("^" 0 1 (ivy-index 0)) "org-trello-help-describing-bindings" #("org-trello help" 0 15 (ivy-index 0)) "org-trello-help-describing-bindings" "org-trello-mode" "org-trello-mode" #("org log" 0 7 (ivy-index 0)) "org-doing-log" #("log" 0 3 (ivy-index 45)) "log-view-msg-next" #("org trello" 0 10 (ivy-index 0)) "org-trello-mode" "package-list-packages" #("inp" 0 3 (ivy-index 0)) "set-input-method" #("^ispel" 0 6 (ivy-index 2)) "ispell-word" "auto-fill-mode" #("auto" 0 4 (ivy-index 0)) "auto-fill-mode" #("^is" 0 3 (ivy-index 0)) "ispell-change-dictionary" #("^rena" 0 5 (ivy-index 0)) "rename-file" #("sudo" 0 4 (ivy-index 0)) "crux-sudo-edit" #("^pack" 0 5 (ivy-index 0)) "package-list-packages" "crux-sudo-edit" #("^pa" 0 3 (ivy-index 0)) "package-list-packages" #("customize-t" 0 11 (ivy-index 0)) "customize-themes" #("^ma" 0 3 (ivy-index 0)) "magit" #("magit sta" 0 9 (ivy-index 3)) "magit-unstage" "magit" "magit" "magit" "magit" "magit" #("magi" 0 4 (ivy-index 0)) "magit" "org-agenda" "org-agenda" #("org agen" 0 8 (ivy-index 0)) "org-agenda" "ispell-change-dictionary" #("org star" 0 8 (ivy-index 0)) "org-superstar-mode" "ispell-change-dictionary" "ispell-change-dictionary" #("^i" 0 2 (ivy-index 0)) "ispell-change-dictionary" #("^isp" 0 4 (ivy-index 0)) "ispell-change-dictionary" #("insert image" 0 12 (ivy-index 0)) "org-notebook-insert-image" #("^cus" 0 4 (ivy-index 0)) "customize" #("^tran" 0 5 (ivy-index 0)) "transparency" #("^custo" 0 6 (ivy-index 2)) "customize" "package-list-packages" #("set va" 0 6 (ivy-index 0)) "set-variable" #("image exter" 0 11 (ivy-index 0)) "image-dired-dired-display-external" #("^image mode" 0 11 (ivy-index 4)) "image-mode-maybe" "image-mode-fit-frame" "image-mode-menu" "image-mode" "image-previous-file" "image-mode" #("^image pre" 0 10 (ivy-index 0)) "image-previous-file" "org-notebook-insert-image" #("org insert ima" 0 14 (ivy-index 0)) "org-notebook-insert-image" "ispell-change-dictionary" "ispell-word" #("^ispell" 0 7 (ivy-index 2)) "ispell-word" "ispell-change-dictionary" #("inpu" 0 4 (ivy-index 0)) "set-input-method" "set-input-method" "set-input-method" #("chmo" 0 4 (ivy-index 0)) "chmod" "org-superstar-mode" #("^org star" 0 9 (ivy-index 0)) "org-superstar-mode" #("su" 0 2 (ivy-index 0))))
(setq file-name-history '(#("/home/buddhilw/.emacs.d/init.el" 0 31 (ivy-index 15)) #("/home/buddhilw/.xprofile" 0 24 (ivy-index 3)) #("/home/buddhilw/PP/Org/Org-files/Jack-audio/programs.org" 0 55 (ivy-index 0)) #("/home/buddhilw/PP/Org/Org-files/Thoughts/" 0 41 (ivy-index 0)) #("/home/buddhilw/PP/Org/Trello/teste.org" 0 38 (ivy-index 0)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/imagens/r1.png" 0 75 (ivy-index 5)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/Roteiro.tex" 0 72 (ivy-index 12)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/bib.bib" 0 68 (ivy-index 0)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/gas.png" 0 68 (ivy-index 0)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/1024px-Mid-infrared_absorption_spectra_of_Gases.png" 0 112 (ivy-index 6)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/" 0 61 (ivy-index 0)) #("/home/buddhilw/Documents/Orgmode/Faculdade/MEFIV/Pre-projeto/pre-projeto.tex" 0 76 (ivy-index 13)) #("/etc/X11/xorg.conf.d/00-keyborad.conf" 0 37 (ivy-index 0)) #("/home/buddhilw/PP/Org/Configuration/Keyboard.org" 0 48 (ivy-index 0)) #("/home/buddhilw/.config/x11/xprofile" 0 35 (ivy-index 3)) #("/home/buddhilw/.config/x11/xinitrc" 0 34 (ivy-index 2)) #("/home/buddhilw/.config/x11/xresources" 0 37 (ivy-index 4)) #("/etc/locale.conf" 0 16 (ivy-index 0)) #("/etc/locale.gen" 0 15 (ivy-index 3)) #("/home/buddhilw/.local/bin/setbg" 0 31 (ivy-index 0)) #("/home/buddhilw/.xinitrc" 0 23 (ivy-index 0)) #("/home/buddhilw/.config/Xresources" 0 33 (ivy-index 0)) #("/home/buddhilw/PP/Org/quick-note.org" 0 36 (ivy-index 7)) #("/home/buddhilw/PP/LaTeX/CV/cv-git/" 0 34 (ivy-index 0)) #("/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/strategy-04-bb-rsi.py" 0 85 (ivy-index 38)) #("/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/strategy-06-bb-rsi.py" 0 85 (ivy-index 39)) #("/home/buddhilw/Documents/Orgmode/TraderBot/Roteiro.org" 0 54 (ivy-index 0)) #("/home/buddhilw/Documents/Orgmode/TraderBot/" 0 43 (ivy-index 0)) #("/home/buddhilw/PP/LaTeX/CV/cv3/template.tex" 0 43 (ivy-index 33)) #("/home/buddhilw/PP/LaTeX/CV/cv3/" 0 31 (ivy-index 0)) #("/home/buddhilw/PP/LaTeX/CV/cv3/twentysecondcvenglish.cls" 0 56 (ivy-index 0)) #("/home/buddhilw/PP/LaTeX/CV/cv3/twentysecondcv.cls" 0 49 (ivy-index 38)) #("/home/buddhilw/PP/LaTeX/CV/cv3/template_english.tex" 0 51 (ivy-index 0)) #("/home/buddhilw/.local/" 0 22 (ivy-index 30)) #("/var/cache/fontconfig/" 0 22 (ivy-index 0)) #("/etc/fonts/fonts.conf" 0 21 (ivy-index 4)) #("/home/buddhilw/.config/xinitrc" 0 30 (ivy-index 99)) #("/home/buddhilw/" 0 15 (ivy-index 0)) #("/home/buddhilw/PP/LaTeX/Eletronica-trabalho/1.pdf" 0 49 (ivy-index 7)) #("/home/buddhilw/PP/LaTeX/Tarefa8/" 0 32 (ivy-index 8)) #("/home/buddhilw/Documents/" 0 25 (ivy-index 0)) #("/home/buddhilw/PP/LaTeX/" 0 24 (ivy-index 0)) #("/home/buddhilw/PP/Org/Org-files/Facebook/2019-muralhas.org" 0 58 (ivy-index 0)) #("/home/buddhilw/PP/Org/Org-files/Notes/Gentoo/install.org" 0 56 (ivy-index 0)) #("/home/buddhilw/Documents/Orgmode/Mandarin/Aula14/aula14.org" 0 59 (ivy-index 2)) #("/home/buddhilw/Documents/Orgmode/Mandarin/Aula13.org" 0 52 (ivy-index 1)) #("/home/buddhilw/Documents/Orgmode/Mandarin/" 0 42 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker3/user_data/config.json" 0 74 (ivy-index 0)) #("/home/buddhilw/freqtrade-doker2/user_data/config.json" 0 53 (ivy-index 0)) #("/home/buddhilw/PP/Org/Org-files/Thoughts/EuNaoGostoDoCapitalismo.org" 0 68 (ivy-index 0)) #("/home/buddhilw/freqtrade-doker-backtesting/" 0 43 (ivy-index 0)) #("/home/buddhilw/freqtrade-doker-backtesting/docker-compose.yml" 0 61 (ivy-index 5)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker2/user_data/config.json" 0 74 (ivy-index 2)) #("/home/buddhilw/freqtrade-docker/user_data/config.json" 0 53 (ivy-index 0)) #("/home/buddhilw/freqtrade-doker3/user_data/config.json" 0 53 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/strategy-06-bb-rsi.py" 0 106 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/" 0 85 (ivy-index 1)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker3/user_data/strategies/strategy-04-bb-rsi.py" 0 95 (ivy-index 13)) #("/home/buddhilw/freqtrade-doker3/user_data/strategies/strategy-06-bb-rsi.py" 0 74 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/config.json" 0 74 (ivy-index 2)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/config.json" 0 85 (ivy-index 0)) #("/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/strategy-03-bb-rsi.py" 0 85 (ivy-index 3)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/strategy-03-bb-rsi.py" 0 106 (ivy-index 6)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/strategy-02-bb-rsi.py" 0 95 (ivy-index 4)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/strategy-03-bb-rsi.py" 0 95 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/SmoothOperator.py" 0 102 (ivy-index 28)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/SmoothScalp.py" 0 99 (ivy-index 29)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/TDSequentialStrategy.py" 0 108 (ivy-index 30)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/TechnicalExampleStrategy.py" 0 112 (ivy-index 31)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/ReinforcedAverageStrategy.py" 0 113 (ivy-index 23)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/Freqtrade_backtest_validation_freqtrade1.py" 0 128 (ivy-index 17)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/EMASkipPump.py" 0 99 (ivy-index 16)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/DoesNothingStrategy.py" 0 107 (ivy-index 15)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/CofiBitStrategy.py" 0 103 (ivy-index 13)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/CombinedBinHAndCluc.py" 0 107 (ivy-index 14)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/ClucMay72018.py" 0 100 (ivy-index 12)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/CMCWinner.py" 0 97 (ivy-index 11)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/CCIStrategy.py" 0 99 (ivy-index 10)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/BinHV45.py" 0 95 (ivy-index 9)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/BinHV27.py" 0 95 (ivy-index 8)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/BbandRsi.py" 0 96 (ivy-index 7)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/AwesomeMacd.py" 0 99 (ivy-index 6)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/AverageStrategy.py" 0 103 (ivy-index 5)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/AdxSmas.py" 0 95 (ivy-index 4)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/ADXMomentum.py" 0 99 (ivy-index 2)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/ASDTSRockwellTrading.py" 0 108 (ivy-index 3)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/sample_strategy.py" 0 103 (ivy-index 34)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/Quickie.py" 0 95 (ivy-index 22)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/adx-bb-rsi2.py" 0 99 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/adx-bb-rsi1.py" 0 99 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/BbandRsi.py" 0 85 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/MultiRSI.py" 0 85 (ivy-index 1)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/ADXMomentum.py" 0 88 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/adxmomentum-bb-rsi.py" 0 95 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/strategies/adxmomentum-bb.p" 0 90 (ivy-index 0)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/hyperopts/bbrsi_opt.py" 0 85 (ivy-index 2)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/hyperopts/sample_hyperopt_advanced.py" 0 100 (ivy-index 4)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-docker/user_data/hyperopts/sample_hyperopt.py" 0 91 (ivy-index 3)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/strategies/strategy-02-bb-rsi.py" 0 106 (ivy-index 2)) #("/sudo:root@localhost:/home/buddhilw/freqtrade-doker-backtesting/user_data/" 0 74 (ivy-index 0))))
(setq search-ring 'nil)
(setq regexp-search-ring '("trello" "outloo" "orgmode" "pt" "xreso" "xresou" "W1" "\\(org\\).*?\\(images\\)" "odt" "São" "lorena" "scalene" "usp" "engi" "inte" "escala"))
