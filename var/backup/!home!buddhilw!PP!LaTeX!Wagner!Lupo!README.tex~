% Created 2021-05-22 Sat 19:35
% Intended LaTeX compiler: pdflatex
\documentclass[11pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{graphicx}
\usepackage{grffile}
\usepackage{longtable}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{amssymb}
\usepackage{capt-of}
\usepackage{hyperref}
\date{\today}
\title{}
\hypersetup{
 pdfauthor={},
 pdftitle={},
 pdfkeywords={},
 pdfsubject={},
 pdfcreator={Emacs 27.2 (Org mode 9.4.5)}, 
 pdflang={English}}
\begin{document}

\tableofcontents


\section{Passo a passo da utilização do Github}
\label{sec:org8d1c1c0}

A ideia do github é para que possamos integrar as mudaças de um
projeto único, com diversos colaboradores, sem muito trabalho.

\subsection{Instalação Windows}
\label{sec:org0a9e3a5}

\subsubsection{Terminal Git}
\label{sec:orgf8a6e89}
\href{https://github.com/git-for-windows/git/releases/download/v2.31.1.windows.1/Git-2.31.1-64-bit.exe}{Esse link}  serve para instalar o Git.

O Git é o programa utilizado para comandar o Github. Por meio dele,
podemos trazer as modificações dos projetos de terceiros à nossa
versão local (arquivo em nossa máquina). Bem como, enviar modificações
locais para o servidor (GitHub), onde os colaboradores podem
acessá-las e atualizar suas próprias versões.

\subsubsection{Após instalado o Git,}
\label{sec:org68726e2}

\begin{enumerate}
\item Criar conta no GitHub
\label{sec:org558807a}
\href{https://github.com/join?ref\_cta=Sign+up\&ref\_loc=header+logged+out\&ref\_page=\%2F\&source=header-home}{Criar conta GitHub,} nesse link, crie sua conta do GitHub, vai ser essencial para usar o repositório e o Git.

\item Configuração do Git
\label{sec:orga2a0619}
Abra a aplicação baixada, no passo \hyperref[sec:orgf8a6e89]{"Terminal Git"}. e.g., digite "git", no navegador do Windows. E, essa deve ser sua cara: 

\begin{center}
\includegraphics[width=.9\linewidth]{Passo_a_passo_da_utilização_do_Github/2021-05-22_17-42-48_1*tLqVaCdc3oTaYSWZawneCA.png}
\end{center}

\begin{itemize}
\item Registrar seu nome
\begin{verbatim}
git config --global user.name "Seu-nome-completo/apelido"
\end{verbatim}

\item Registrar eu usuário e e-mail pelo terminal
\end{itemize}

\begin{verbatim}
git config --global user.email "seu-email-registrado-no-git@dominio-de-email.com"
\end{verbatim}

\item Passar seu nome no grupo, para adição para colaborar no projeto
\label{sec:orga73bfba}
Após ter sido convidado para colaborar no projeto, siga esses passos:
\begin{itemize}
\item Entre em seu e-mail
\item Encontre o e-mail de notificação do convite a colaborar no repositório, por "BuddhiLW"
\item Por fim, entre no link do e-mail, e aceite o convite de colaboração do repositório

Agora, sua conta já está autorizada a \textbf{clonar} e \textbf{colaborar} no \textbf{repositório privado}.
\end{itemize}

\item Fazer download do Projeto
\label{sec:orgfc342d8}
No seu terminal Git, navegue até à pasta onde deseja fazer o download do projeto.

\texttt{cd} significa (\textbf{c})hange (\textbf{d})irectory.

\begin{verbatim}
cd ~/caminho/até/sua/pasta
\end{verbatim}

\href{Passo\_a\_passo\_da\_utilização\_do\_Github/cd.jpeg}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/cd.jpeg}
\caption{cd \label{org852eb36}}
\end{figure}}

\texttt{OBS}: Note que,
\begin{verbatim}
cd ~/
\end{verbatim}

Equivale a algo próximo de,

\begin{verbatim}
cd C:\Usuário\Perfil\Usuário\
\end{verbatim}

Dentro do diretório de seu escolha, 

\begin{verbatim}
git clone https://github.com/BuddhiLW/Lupo.git
\end{verbatim}

\href{Passo\_a\_passo\_da\_utilização\_do\_Github/git-clone-sucesso.jpeg}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/git-clone-sucesso.jpeg}
\caption{git push e autorização, login}
\end{figure}}
\end{enumerate}

\subsection{Comandos básicos}
\label{sec:org476982b}
Agora, você já está pronto para enviar e receber mudanças em nosso projeto!

Vamos aprender a usar os comandos do Git, nas situações mais corriqueiras que teremos, na prática.

\subsubsection{Enviar mudanças-locais ao projeto no repositório}
\label{sec:orgbd8f395}

Você pode testas com o arquivo teste-github-me-destrua.org, que está junto com os arquivos do projeto. Como o próprio nome diz, esse aquivo pode ser modificado à vontade. Não tenha medo de o deletar, modificar, ou o destruir! Erre, teste, e aprenda!

Ok, entrando nesse arquivo, vemos um texto em Latim, "Lorem ipsum (\ldots{})".

\begin{figure}[htbp]
\centering
\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-full-210522-1807-32.png}
\caption{Lorem Ipsum, arquivo original do repositório baixado}
\end{figure}

Passo\textsubscript{a}\textsubscript{passo}\textsubscript{da}\textsubscript{utilização}\textsubscript{do}\textsubscript{Github}/
Então, após nossa modificação,

\begin{figure}[htbp]
\centering
\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-full-210522-1807-55.png}
\caption{Modificações-locais à Lorem Ipsum}
\end{figure}

Agora, queremos lançar nossas modificações-locais, apenas presente em nosso computador, ao repositório. Assim, todos podem ver minha consternação com o fato desse texto, Lorem Ipsum, aparecer em todo o lugar.

\begin{enumerate}
\item git add
\label{sec:orgb1e2862}
Escolhemos quais arquivos queremos que o Git mantenha-se ciente da modificação e, consequentemente, mande ao repositório 
\begin{verbatim}
git add <<arquivo-modificado>>
\end{verbatim}

Em nosso caso,
\begin{verbatim}
git add ./teste-github-me-destrua.org
\end{verbatim}

\href{pic-selected-210522-1824-56.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1824-56.png}
\caption{git add \label{org12ff8c5}}
\end{figure}}


Se houvesse mais de um arquivo modificado, e quisséssemos mandar todas as modificações,
\begin{verbatim}
git add .
\end{verbatim}

\href{pic-selected-210522-1825-39.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1825-39.png}
\caption{git add all files [\$ git add .]}
\end{figure}}

\item git commit
\label{sec:orgf085dfe}
Agora, que escolhemos as modificações que queremos que o git fique ciente e modifique no repositório, temos dizer para ele que de fato, vamos mandar esse "pacote" de modificações ao repositório no Github. Também, enviamos um comentário ((\textbf{m})enssagem), para que todos saibam do que se trata a modificação.

\begin{verbatim}
git commit -m "Modificação em teste-github-me-destrua.org, dúvidas sobre a origem e significado do texto"
\end{verbatim}

\href{pic-selected-210522-1826-34.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1826-34.png}
\caption{git commit -m "notificação sobre modificações"}
\end{figure}}

\item git push
\label{sec:org461e928}
Por fim, atualizamos a versão do repositório, na nuvem, com

\begin{verbatim}
git push
\end{verbatim}

Aqui, o git \emph{pode} vir a te pedir para que se identifique, como o autor das mudanças.


\href{pic-selected-210522-1826-51.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1826-51.png}
\caption{git push e autorização, login}
\end{figure}}

Ponha o usuário-login do seu Github

\href{pic-selected-210522-1827-03.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1827-03.png}
\caption{git push e autorização, o meu: BuddhiLW}
\end{figure}}

Por fim, sua senha - \texttt{obs} o git tende a privar sua senha, de quem estiver olhando o seu terminal.
\href{pic-selected-210522-1827-11.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1827-11.png}
\caption{git push e autorização, senha}
\end{figure}}

Voiàla, suas mudanças agora podem ser vistas, e seus companheiros podem adquirir a suas mudanças, pelo repositório, sem que você tenha que explicitamente enviar e explicar as mudanças para cada um deles.

\href{pic-selected-210522-1827-28.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1827-28.png}
\caption{git push e autorização}
\end{figure}}
\end{enumerate}


\subsection{Trazendo mudanças, enviada por colaboradores, à sua máquina local}
\label{sec:org423e076}

Ok, você ja sabe enviar suas mudanças. Hora de aprender a receber a dos outros, em sua máquina!

\subsubsection{git pull}
\label{sec:orgaa5e18d}
\href{Passo\_a\_passo\_da\_utilização\_do\_Github/pic-selected-210522-1913-33.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-selected-210522-1913-33.png}
\caption{git pull}
\end{figure}}

Voiàla, dejavù, as mudanças estão prontas, na máquina local (seu computador)!

\href{Passo\_a\_passo\_da\_utilização\_do\_Github/modificacoes-terceiros.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/modificacoes-terceiros.png}
\caption{mudanças pós git pull}
\end{figure}}


\subsection{Comando de status, para saber o que anda acontecendo no repositório}
\label{sec:orgf1cd8dc}

Para saber de adiante se alguém fez uma nova modificação, e o que se modificou, no repositório, podemos sempre dar um

\subsubsection{git status}
\label{sec:org6a6dbbf}

\href{pic-full-210522-1824-04.png}{\begin{figure}[htbp]

\includegraphics[width=600px]{./Passo_a_passo_da_utilização_do_Github/pic-full-210522-1824-04.png}
\caption{git status}
\end{figure}}
\end{document}